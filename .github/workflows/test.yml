name: Test

on:
  workflow_call:
    inputs:
      target_env:
        description: 'Target environment'
        type: string
        required: true
      execution_mode:
        description: 'Execution mode'
        type: string
        required: true

run-name: 'DB migrations: ${{ inputs.target_env }} / ${{ inputs.execution_mode }}'

jobs:
  run-migrations:
    runs-on: ubuntu-latest
    environment: ${{ inputs.target_env }}
    permissions:
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout pull request head
        run: gh pr checkout ${{ github.event.issue.number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check approval
        if: ${{ inputs.execution_mode == 'apply' }}
        run: |
          REVIEW_STATUS=$(gh pr view ${{ github.event.issue.number }} --json reviewDecision | jq .reviewDecision)
          if [ "$REVIEW_STATUS" != "APPROVED" ]; then
            echo "Pull request is not approved"
            gh pr comment ${{ github.event.issue.number }} --body ":no_entry_sign: Cannot apply changes: pull request is not approved."
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare environment
        run: |
          echo LIQUIBASE_SHOW_BANNER="false" > .liquibase.env
          echo LIQUIBASE_COMMAND_USERNAME="${{ secrets.LIQUIBASE_COMMAND_USERNAME }}" >> .liquibase.env
          echo LIQUIBASE_COMMAND_PASSWORD="${{ secrets.LIQUIBASE_COMMAND_PASSWORD }}" >> .liquibase.env
          echo LIQUIBASE_COMMAND_URL="${{ vars.LIQUIBASE_COMMAND_URL }}" >> .liquibase.env

      - name: Run migrations
        run: |
          scripts/run-db-migrations.sh ${{ inputs.execution_mode }}

      - name: Print migration diff
        if: "${{ inputs.execution_mode == 'plan' }}"
        run: |
          echo "### Migration plan for '${{ inputs.target_env }}' complete." > body
          echo "Please review the update script:" >> body
          echo "\`\`\`sql" >> body
          cat liquibase/liquibase-output >> body
          echo "\`\`\`" >> body
          echo "If you are satisfied with the plan, comment the following command to this PR:" >> body
          echo "\`\`\`" >> body
          echo "#db:apply" >> body
          echo "\`\`\`" >> body
          gh pr comment ${{ github.event.issue.number }} --body-file body
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print migration output
        if: "${{ inputs.execution_mode == 'apply' }}"
        run: |
          echo "### Migration for '${{ inputs.target_env }}' complete." > body
          echo "Liquibase output:" >> body
          echo "\`\`\`" >> body
          cat liquibase/liquibase-output >> body
          echo "\`\`\`" >> body
          gh pr comment ${{ github.event.issue.number }} --body-file body
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
